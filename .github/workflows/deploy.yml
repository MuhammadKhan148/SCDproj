name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker to use Minikube's environment
      run: |
        echo "Configuring Docker to use Minikube's daemon..."
        eval $(minikube docker-env)

    - name: Build Docker image
      run: |
        docker build -t ${DOCKER_USERNAME}/k8s-demo-app:latest .
        echo "Docker image built successfully"

    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        echo "Logged in to Docker Hub"

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${DOCKER_USERNAME}/k8s-demo-app:latest
        echo "Docker image pushed to Docker Hub"

    - name: Create namespace if not exists
      run: |
        kubectl get namespace scd-project || kubectl apply -f k8s/namespace.yaml
        echo "Namespace created or already exists"

    - name: Deploy to Minikube
      run: |
        # Replace ${DOCKER_USERNAME} placeholder with the actual GitHub secret
        sed -i "s/\${DOCKER_USERNAME}/${{ secrets.DOCKER_USERNAME }}/g" k8s/deployment.yaml
        
        kubectl apply -f k8s/pvc.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        echo "Deployed to Minikube"

    - name: Wait for deployments to be ready
      run: |
        kubectl -n scd-project rollout status deployment/k8s-demo-app
        kubectl -n scd-project rollout status deployment/mongo
        echo "Deployments are ready"

    - name: Show application URL
      run: |
        echo "Your application is available at:"
        minikube service -n scd-project k8s-demo-service --url 