apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-demo-app
  namespace: scd-project
  labels:
    app: k8s-demo
  # Trigger workflow run
spec:
  replicas: 2
  selector:
    matchLabels:
      app: k8s-demo
  template:
    metadata:
      labels:
        app: k8s-demo
    spec:
      containers:
      - name: app
        image: ${DOCKER_USERNAME}/k8s-demo-app:latest
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "5000"
        - name: MONGO_URI
          value: "mongodb://mongo:27017/k8s-demo"
        - name: K8S_CLUSTER
          value: "minikube"
        - name: APP_VERSION
          value: "1.0.0"
        - name: DEPLOYMENT_ID
          value: "k8s-minikube"
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /api/health/liveness
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health/readiness
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: scd-project
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:6.0
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
      volumes:
      - name: mongo-data
        persistentVolumeClaim:
          claimName: mongo-pvc